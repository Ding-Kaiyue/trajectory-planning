name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  ROS_DISTRO: humble

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        config:
          - {name: "Default Build", use_trac_ik: "ON"}
          - {name: "Without TracIK", use_trac_ik: "OFF"}

    name: ${{ matrix.config.name }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup ROS 2
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ env.ROS_DISTRO }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-vcstool \
          python3-colcon-common-extensions \
          python3-rosdep

    - name: Initialize rosdep
      run: |
        sudo rosdep init || true
        rosdep update

    - name: Create workspace
      run: |
        mkdir -p ~/ros_ws/src
        cd ~/ros_ws/src
        ln -s $GITHUB_WORKSPACE ./trajectory_planning

    - name: Install MoveIt2 dependencies
      run: |
        cd ~/ros_ws
        # 使用预编译的MoveIt2包而不是从源码构建
        sudo apt-get install -y \
          ros-${{ env.ROS_DISTRO }}-moveit-core \
          ros-${{ env.ROS_DISTRO }}-moveit-planners \
          ros-${{ env.ROS_DISTRO }}-moveit-plugins

    - name: Install TracIK (if enabled)
      if: matrix.config.use_trac_ik == 'ON'
      run: |
        cd ~/ros_ws/src
        # Clone the original trac_ik for ROS1 (used as reference)
        git clone https://github.com/aprotyas/trac_ik.git
        # Note: Your ROS2 adaptation plugin is already in the project src

    - name: Install project dependencies
      run: |
        cd ~/ros_ws
        rosdep install --from-paths src --ignore-src -r -y --skip-keys="warehouse_ros_mongo ruckig" || true

    - name: Build workspace
      run: |
        cd ~/ros_ws
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash

        # 构建参数
        colcon build \
          --packages-up-to trajectory_planning_v3 \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=Release \
            -DUSE_TRAC_IK=${{ matrix.config.use_trac_ik }} \
          --event-handlers console_direct+

    - name: Run tests
      run: |
        cd ~/ros_ws
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
        source install/setup.bash

        # 运行 ament 测试
        colcon test --packages-select trajectory_planning_v3

        # 显示测试结果
        colcon test-result --verbose

    - name: Lint and format check
      run: |
        cd ~/ros_ws
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
        source install/setup.bash

        # 运行 lint 检查
        ament_cpplint src/trajectory_planning/src/trajectory_planning_v3/ || true
        ament_cppcheck src/trajectory_planning/src/trajectory_planning_v3/ || true

  build-check:
    runs-on: ubuntu-22.04
    name: Build Check (Fast)

    steps:
    - uses: actions/checkout@v4

    - name: Setup ROS 2
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ env.ROS_DISTRO }}

    - name: Install minimal dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-colcon-common-extensions \
          python3-rosdep \
          ros-${{ env.ROS_DISTRO }}-moveit \
          ros-${{ env.ROS_DISTRO }}-moveit-resources \
          ros-${{ env.ROS_DISTRO }}-ruckig || true

    - name: Initialize rosdep
      run: |
        sudo rosdep init || true
        rosdep update

    - name: Create workspace and install dependencies
      run: |
        mkdir -p ~/ros_ws/src
        cd ~/ros_ws/src
        ln -s $GITHUB_WORKSPACE ./trajectory_planning
        cd ~/ros_ws
        rosdep install --from-paths src --ignore-src -r -y --skip-keys="warehouse_ros_mongo ruckig"

    - name: Fast build check
      run: |
        cd ~/ros_ws
        source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash

        # 快速构建检查（不编译测试）
        colcon build \
          --packages-select trajectory_planning_v3 \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTING=OFF \
          --event-handlers console_direct+

  analyze:
    runs-on: ubuntu-22.04
    name: Static Analysis

    steps:
    - uses: actions/checkout@v4

    - name: Run clang-format check
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: '14'
        check-path: 'src'
        fallback-style: 'Google'

    - name: Setup ROS 2 for analysis
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ env.ROS_DISTRO }}

    - name: Install analysis tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cppcheck \
          clang-tidy \
          python3-colcon-common-extensions

    - name: Run cppcheck
      run: |
        cppcheck --enable=all --suppress=missingIncludeSystem \
          --xml --xml-version=2 \
          src/trajectory_planning_v3/src/ \
          src/trajectory_planning_v3/include/ \
          2> cppcheck-result.xml || true

    - name: Upload cppcheck results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cppcheck-results
        path: cppcheck-result.xml